// Generated by CoffeeScript 2.5.1
var AppView, UserView;

UserView = Backbone.View.extend({
  className: "users__card",
  template: _.template($("#user-template").html()),
  events: {
    "click .users__button_apply": "deactivateEditMode",
    "click .users__button_edit": "activateEditMode",
    "click .users__button_delete": "clear"
  },
  initialize: function() {
    this.listenTo(this.model, "change", this.render);
    return this.listenTo(this.model, "destroy", this.remove);
  },
  render: function() {
    this.$el.html(this.template({
      ...this.model.toJSON(),
      error: this.model.validationError
    }));
    return this;
  },
  clear: function() {
    return this.model.destroy();
  },
  activateEditMode: function() {
    return this.model.set({
      isOnEdit: true
    });
  },
  // this.model.save()
  deactivateEditMode: function() {
    var name, phone;
    name = this.model.get("name");
    phone = this.model.get("phone");
    if (!name || !phone) {
      this.clear();
    }
    this.model.set({
      name: document.querySelector('.users__input[name="name"]').value,
      phone: document.querySelector('.users__input[name="phone"]').value
    });
    if (!this.model.isValid()) {
      this.model.set({name, phone});
    }
    return this.model.set({
      isOnEdit: false
    });
  }
});

// this.model.save()
AppView = Backbone.View.extend({
  el: document.getElementById("root"),
  events: {
    "click .add__plus": "addNew"
  },
  initialize: function() {
    this.listenTo(users, "add", this.addOne);
    return this.listenTo(users, "reset", this.addAll);
  },
  addNew: function() {
    var user;
    users.setIsEditFalse();
    user = new User({
      phone: document.querySelector('#add .add__input[name="phone"]').value,
      name: document.querySelector('#add .add__input[name="name"]').value
    });
    if (user.isValid()) {
      // .create()
      users.add(user);
    }
    this.model.set({
      error: user.validationError
    });
    document.querySelector(".add__error").textContent = this.model.get("error");
    document.querySelector('.add__input[name="phone"]').value = "";
    return document.querySelector('.add__input[name="name"]').value = "";
  },
  addOne: function(user) {
    var view;
    if (user.isValid()) {
      view = new UserView({
        model: user
      });
      return document.getElementById("users").append(view.render().el);
    }
  },
  addAll: function() {
    return users.each(this.addOne, this);
  }
});
